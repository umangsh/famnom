# Generated by Django 3.2.9 on 2021-11-19 05:26

import uuid

import bitfield.models
import django.utils.timezone
from django.db import migrations, models

import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_timestamp", models.DateTimeField(auto_now=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "external_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="External UUID for the user.",
                        unique=True,
                        verbose_name="external_id",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="First Name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="Last Name")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="Email Address")),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="User's date of birth.", null=True, verbose_name="date_of_birth"
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                (
                    "family_id",
                    models.UUIDField(
                        blank=True,
                        help_text="UUID of the family the user belongs to.",
                        null=True,
                        verbose_name="family_id",
                    ),
                ),
                (
                    "family_added_timestamp",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when the user was added to a family.",
                        null=True,
                        verbose_name="family_added_timestamp",
                    ),
                ),
                ("flags", bitfield.models.BitField(("is_pregnant",), default=None, null=True)),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "ut_user",
                "abstract": False,
            },
            managers=[
                ("objects", users.models.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["family_id"], name="user_familyid_idx"),
        ),
    ]
